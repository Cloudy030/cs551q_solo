try:
  from django.conf import settings
  from django.db import models
except ImportError as error:
  print("Error importing Module: ", error)

# Create your models here.

class Year(models.Model):
  # model for year with only year from year.csv with autogenerated id
  id=models.BigAutoField(primary_key=True)
  year=models.TextField()
  # cannot use models.IntegerField because of N/A in year field

  def __str__(self):
    return f'{self.year}'

class Genre(models.Model):
  # model for genre with only genre from genre.csv with autogenerated id
  id=models.BigAutoField(primary_key=True)
  genre=models.TextField()

  def __str__(self):
    return f'{self.genre}'

class Platform(models.Model):
  # model for platform of game release from platform.csv with autogenerated id
  id=models.BigAutoField(primary_key=True)
  platform=models.TextField()
  url=models.TextField()

  def __str__(self):
    return f'{self.platform,self.url}'
    
class Publisher(models.Model):
  # model for publisher of game release from publisher.csv with autogenerated id
  id=models.BigAutoField(primary_key=True)
  publisher=models.TextField()

  def __str__(self):
    return f'{self.publisher}'

class Game(models.Model):
  # model for video game sales from vgsales_edited.csv with autogenerated id
  id=models.BigAutoField(primary_key=True)
  rank=models.IntegerField()
    # sales rank from top 1 to 3000, lost 654th
  name=models.TextField()
    # name of video game
  platform=models.ForeignKey('Platform', on_delete=models.CASCADE, null=True)
  year=models.ForeignKey('Year', on_delete=models.CASCADE, null=True)
  genre=models.ForeignKey('Genre', on_delete=models.CASCADE, null=True)
  publisher=models.ForeignKey('Publisher', on_delete=models.CASCADE, null=True)
  na_sales=models.FloatField()
    # sales in north america (in millions)
  eu_sales=models.FloatField()
    # sales in europe (in millions)
  jp_sales=models.FloatField()
    # sales in japan (in millions)
  other_sales=models.FloatField()
    # sales in rest of the world (in millions)
  global_sales=models.FloatField()
    # total worldwide sales (in millions)

  def __str__(self):
    return f'{self.rank}, {self.name}, {self.platform}, {self.year}, {self.genre}, {self.publisher}, {self.na_sales}, {self.eu_sales}, {self.jp_sales}, {self.other_sales}, {self.global_sales}'